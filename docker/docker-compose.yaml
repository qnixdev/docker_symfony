version: "3.8"

services:

    # Nginx-proxy service
    proxy:
        container_name: symfony-proxy
        image: jwilder/nginx-proxy
        ports:
            - "80:80"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
        networks:
            - reverse_proxy
        restart: unless-stopped

    # Nginx service
    nginx:
        container_name: symfony-nginx
        build:
            context: ./nginx
            args:
                NGINX_VERSION: ${NGINX_VERSION}
                DOMAIN_NAME: ${DOMAIN_NAME}
        volumes:
            - ../app/public:/app
        depends_on:
            - php
        networks:
            reverse_proxy:
            symfony_app:
            main:
                aliases:
                    - ${DOMAIN_NAME}
        environment:
            - VIRTUAL_HOST=${DOMAIN_NAME}
        restart: unless-stopped

    # PHP-FPM service
    php:
        container_name: symfony-app
        build:
            context: ./php
            args:
                PHP_VERSION: ${PHP_VERSION}
                USER_APP: ${USER_APP}
                GROUP_APP: ${GROUP_APP}
                UID: ${UID}
                GID: ${GID}
        user: ${UID}:${GID}
        volumes:
            - ../app/:/app
        depends_on:
            - postgres
            - redis
        networks:
            - symfony_app
        restart: unless-stopped

    # Postgres service
    postgres:
        container_name: symfony-postgres
        image: postgres:${POSTGRES_VERSION}
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "49153:5432"
        user: ${UID}:${GID}
        volumes:
            - ../data/postgres:/var/lib/postgresql/data
        networks:
            - symfony_app
        restart: unless-stopped

    # Redis service
    redis:
        container_name: symfony-redis
        image: redis:${REDIS_VERSION}-alpine
        ports:
            - "49154:6379"
        volumes:
            - ../data/redis:/data
        networks:
            - symfony_app
        restart: unless-stopped
        command:
            - "redis-server"
            - "--loglevel ${REDIS_LOGLEVEL}"
            - "--databases 2"
            - "--save 900 1"
            - "--save 300 10"
            - "--save 60 10000"
            - "--maxmemory ${REDIS_MAXMEM}"
            - "--maxmemory-policy ${REDIS_POLICY}"
            - "--requirepass ${REDIS_PASS}"

    # Node service
    node:
        container_name: symfony-node
        image: node:${NODE_VERSION}-alpine
        user: ${UID}:${GID}
        volumes:
            - ../app/:/app
        depends_on:
            - php
        working_dir: /app
        networks:
            - symfony_app
        restart: unless-stopped
        command: >
            /bin/sh -c "yarn && yarn watch"

# Docker Networks
networks:
    reverse_proxy:
    symfony_app:
        driver: bridge
    main:
        driver: bridge

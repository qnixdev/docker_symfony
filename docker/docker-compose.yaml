version: "3.8"

services:

    # Nginx-proxy service
    app-proxy:
        container_name: symfony-proxy
        image: jwilder/nginx-proxy
        ports:
            - "80:80"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
        depends_on:
            - app-php
        networks:
            - reverse_proxy
        restart: unless-stopped

    # Nginx service
    app-nginx:
        container_name: symfony-nginx
        build:
            context: ./nginx
            args:
                NGINX_VERSION: ${NGINX_VERSION}
                DOMAIN_NAME: ${DOMAIN_NAME}
        volumes:
            - ../app/public:/app
        depends_on:
            - app-php
        networks:
            reverse_proxy:
            symfony_app:
            main:
                aliases:
                    - ${DOMAIN_NAME}
        environment:
            - VIRTUAL_HOST=${DOMAIN_NAME}
        restart: unless-stopped

    # PHP-FPM service
    app-php:
        container_name: symfony-app
        build:
            context: ./php
            args:
                PHP_VERSION: ${PHP_VERSION}
                USER_APP: ${USER_APP}
                GROUP_APP: ${GROUP_APP}
                UID: ${UID}
                GID: ${GID}
        user: ${UID}:${GID}
        volumes:
            - ../app:/app
        depends_on:
            - app-postgres
        networks:
            - symfony_app
        restart: unless-stopped

    # Postgres service
    app-postgres:
        container_name: symfony-postgres
        image: postgres:${POSTGRES_VERSION}
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "49153:5432"
        user: ${UID}:${GID}
        volumes:
            - ../data/postgres:/var/lib/postgresql/data
        networks:
            - symfony_app
        restart: unless-stopped

# Docker Networks
networks:
    reverse_proxy:
    symfony_app:
        driver: bridge
    main:
        driver: bridge
